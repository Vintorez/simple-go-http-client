// Code generated by mockery v1.0.0
package mocks

import io "io"
import mock "github.com/stretchr/testify/mock"

// IHttpClient is an autogenerated mock type for the IHttpClient type
type IHttpClient struct {
	mock.Mock
}

// DELETE provides a mock function with given fields: urlStr, body
func (_m *IHttpClient) DELETE(urlStr string, body io.Reader) error {
	ret := _m.Called(urlStr, body)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.Reader) error); ok {
		r0 = rf(urlStr, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GET provides a mock function with given fields: urlStr, v
func (_m *IHttpClient) GET(urlStr string, v interface{}) error {
	ret := _m.Called(urlStr, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(urlStr, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// POST provides a mock function with given fields: urlStr, body, v
func (_m *IHttpClient) POST(urlStr string, body io.Reader, v interface{}) error {
	ret := _m.Called(urlStr, body, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.Reader, interface{}) error); ok {
		r0 = rf(urlStr, body, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PUT provides a mock function with given fields: urlStr, body, v
func (_m *IHttpClient) PUT(urlStr string, body io.Reader, v interface{}) error {
	ret := _m.Called(urlStr, body, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.Reader, interface{}) error); ok {
		r0 = rf(urlStr, body, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
